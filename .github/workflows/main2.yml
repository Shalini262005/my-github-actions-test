name: CI with Email and Cache

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  test-and-cache:
    runs-on: ubuntu-latest
    
    steps:
    # Step 1: Checkout code
    - name: Checkout repository
      uses: actions/checkout@v4
      
    # Step 2: Your email step (from previous task)
    - name: 24f2005043@ds.study.iitm.ac.in - Initial Setup
      run: |
        echo "Hello from ${{ github.actor }}!"
        echo "Repository: ${{ github.repository }}"
        echo "Workflow: ${{ github.workflow }}"
        echo "This step contains my email address: 24f2005043@ds.study.iitm.ac.in"
        echo "Current directory contents:"
        ls -la
        
    # Step 3: Cache dependencies using actions/cache@v4
    - name: Cache project dependencies
      uses: actions/cache@v4
      id: dependency-cache
      with:
        path: |
          ~/.npm
          node_modules
          .cache
          vendor
        key: cache-240e458-${{ runner.os }}-${{ hashFiles('**/package-lock.json', '**/yarn.lock', '**/requirements.txt') }}
        restore-keys: |
          cache-240e458-${{ runner.os }}-
          cache-240e458-
    
    # Step 4: Setup environment
    - name: Setup Python and Node.js
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    # Step 5: Install dependencies (with cache check)
    - name: Install dependencies
      run: |
        echo "Cache hit status: ${{ steps.dependency-cache.outputs.cache-hit }}"
        
        # Create sample files if they don't exist
        if [ ! -f package.json ]; then
          echo '{"name":"ci-cache-demo","version":"1.0.0","dependencies":{"axios":"^1.0.0"}}' > package.json
          echo "Created sample package.json"
        fi
        
        if [ ! -f requirements.txt ]; then
          echo "flask>=2.0.0" > requirements.txt
          echo "requests>=2.25.0" >> requirements.txt
          echo "Created sample requirements.txt"
        fi
        
        # Install Python dependencies
        echo "Installing Python dependencies..."
        pip install -r requirements.txt
        
        # Install Node.js dependencies
        echo "Installing Node.js dependencies..."
        npm install
        
    # Step 6: The required prime-cache-240e458 step
    - name: prime-cache-240e458
      run: |
        echo "=== CACHE PRIME STATUS ==="
        echo "Cache Key: cache-240e458"
        echo "Cache Hit: ${{ steps.dependency-cache.outputs.cache-hit }}"
        echo "Cache Primary Key: ${{ steps.dependency-cache.outputs.cache-primary-key }}"
        echo "Cache Restore Keys: ${{ steps.dependency-cache.outputs.cache-restore-keys }}"
        
        if [ "${{ steps.dependency-cache.outputs.cache-hit }}" == "true" ]; then
          echo "âœ… SUCCESS: Cache was HIT - Dependencies restored from cache!"
          echo "This saved significant download and installation time."
          echo "Cache key used: ${{ steps.dependency-cache.outputs.cache-primary-key }}"
        else
          echo "ðŸ”„ CACHE MISS: Cache was primed for future runs."
          echo "This run installed dependencies fresh, but next run will be faster."
          echo "New cache key: ${{ steps.dependency-cache.outputs.cache-primary-key }}"
        fi
        
        echo "=== CACHE PRIME COMPLETE ==="
        
    # Step 7: Run tests
    - name: Run tests
      run: |
        echo "Running test simulations..."
        echo "1. Python environment test:"
        python -c "import flask; print('Flask available')" || echo "Flask not available"
        python -c "import requests; print('Requests available')" || echo "Requests not available"
        
        echo "2. Node.js environment test:"
        node -e "console.log('Node.js working')"
        
        echo "3. Cache directory check:"
        ls -la ~/.npm 2>/dev/null || echo "No npm cache directory"
        ls -la .cache 2>/dev/null || echo "No .cache directory"
        
        echo "âœ… All tests completed successfully!"
        
    # Step 8: Final verification
    - name: Final verification
      run: |
        echo "=== WORKFLOW COMPLETION REPORT ==="
        echo "Email step: âœ… Completed (24f2005043@ds.study.iitm.ac.in)"
        echo "Cache step: âœ… Completed (cache-240e458)"
        echo "Cache status: ${{ steps.dependency-cache.outputs.cache-hit }}"
        echo "All steps executed successfully!"
        echo "Workflow: ${{ github.workflow }}"
        echo "Run ID: ${{ github.run_id }}"
        echo "=== END REPORT ==="
